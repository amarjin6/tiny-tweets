version: "3.9"

services:
  pgdb:
    image: postgres
    container_name: pgdb
    restart: on-failure
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - env/db.env
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: on-failure
    env_file:
      - env/rabbitmq.env
    ports:
      - "5672:5672"
      - "15672:15672"
  django:
    build: .
    container_name: django
    restart: always
    volumes:
      - .:/usr/src/
    ports:
      - "8000:8000"
    env_file:
      - env/.env
      - env/db.env
      - env/localstack.env
      - env/rabbitmq.env
    depends_on:
      - pgdb
      - localstack
      - rabbitmq
  fastapi:
    build: ./microservice
    container_name: fastapi
    restart: always
    volumes:
      - ./microservice:/usr/src/
    ports:
      - "8080:8080"
    env_file:
      - env/fastapi.env
      - env/localstack.env
      - env/rabbitmq.env
    depends_on:
      - localstack
      - rabbitmq
  localstack:
    image: localstack/localstack
    container_name: localstack
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "4566:4566"
    env_file:
      - env/.env
      - env/localstack.env
  celery:
    build: .
    container_name: celery
    restart: on-failure
    command: celery -A innotter worker -l INFO
    tty: true
    stdin_open: true
    volumes:
      - .:/usr/src/
    env_file:
      - env/rabbitmq.env
      - env/.env
      - env/localstack.env
    depends_on:
      - rabbitmq
  flower:
    image: mher/flower
    container_name: flower
    command: celery flower
    ports:
      - "5555:5555"
    volumes:
      - flower_data:/data
    env_file:
      - env/rabbitmq.env
    depends_on:
      - celery
volumes:
  pgdata:
  flower_data:
